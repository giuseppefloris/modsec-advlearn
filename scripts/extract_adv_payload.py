"""
The script extracts the adversarial payloads from the output files generated by the WAFamole tool.
"""

import json

def clean_payload(payload):
    return payload.replace("\u00a0", " ")

def process_file(input_file):
    with open(input_file, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    adv_payloads = [clean_payload(entry['adv_payload']) for entry in data]
    output_data  = adv_payloads
    output_file  = input_file.replace("output_", "adv_test_")
    
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(output_data, f, ensure_ascii=False, indent=2)
    
    print(f"Processed {input_file} and saved to {output_file}")


if __name__ == "__main__":
    input_files = [
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l1_pl1_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l1_pl2_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l1_pl3_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l1_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l2_pl1_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l2_pl2_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l2_pl3_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_log_reg_l2_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l1_pl1_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l1_pl2_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l1_pl3_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l1_pl4_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l2_pl1_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l2_pl2_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l2_pl3_rs20_100rounds.json",
        "wafamole_results/results_dataset_wafamole/adv_examples_test/output_svm_linear_l2_pl4_rs20_100rounds.json"
    ]

    for file in input_files:
        process_file(file)